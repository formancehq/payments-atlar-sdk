openapi: 3.0.3
info:
  title: Atlar API (v2)
  version: '0.1'
  contact:
    email: support@atlar.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
servers:
  - url: https://api.atlar.com/payments
security:
  - basicAuth: []
tags:
  - name: Credit Transfers
    description: Credit transfers are payments initiated by a debtor to transfer funds to a creditor's account.
  - name: Direct Debits
    description: Direct debits are payments initiated by a creditor to collect funds from a debtor's account.
  - name: External Accounts
    description: External accounts are financial accounts held by counterparties at financial institutions.
  - name: Counterparties
    description: Counterparties are entities that the account holder has a relationship with.
  - name: Mandates
    description: Mandates are authorizations given by a debtor to a creditor to collect funds from the account.
paths:
  /v2/credit-transfers:
    post:
      summary: Create credit transfer
      description: Create a credit transfer payment.
      tags:
        - Credit Transfers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditTransferRequest'
      responses:
        '201':
          description: The created credit transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - credit_transfers:create
            - accounts:read
            - entities:read
            - external_accounts:read
            - counterparties:read
    get:
      summary: List credit transfers
      description: Returns a list of credit transfers. Sort order is always descending on date.
      tags:
        - Credit Transfers
      parameters:
        - description: Include only credit transfers for the given source account.
          in: query
          name: accountId
          schema:
            type: string
        - description: Include only credit transfers with the given status.
          in: query
          name: status
          schema:
            type: string
            enum:
              - CREATED
              - APPROVED
        - description: Include only credit transfers with property `date` matching the given value. The parameter value may be either a string for equality matching, or an object for range-like matching criteria.
          in: query
          name: date
          explode: true
          style: deepObject
          schema:
            oneOf:
              - type: string
                format: date
                example: '2022-01-15'
                description: Include only credit transfers with `date` equal to the given value.
              - type: object
                properties:
                  gte:
                    type: string
                    format: date
                    example: '2022-01-01'
                    description: Include only credit transfers with `date` after or equal to given date.
                  lte:
                    type: string
                    format: date
                    example: '2022-01-31'
                    description: Include only credit transfers with `date` before or equal to given date.
                  eq:
                    type: string
                    format: date
                    example: '2022-01-15'
                    description: Include only credit transfers with `date` equal to given date.
        - description: Include only credit transfers that are part of the payment batch with the given batch ID.
          in: query
          name: batchId
          schema:
            type: string
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: A list of credit transfers.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/CreditTransfer'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - credit_transfers:read
  /v2/credit-transfers/{id}:
    get:
      summary: Get credit transfer
      description: Retrieve a specific credit transfer.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: A credit transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransfer'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:read
    patch:
      summary: Update credit transfer
      description: |-
        Update a credit transfer.

        The credit transfer execution date can only be changed if the
        credit transfer has not been scheduled for submission yet.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditTransferJSONPatchRequest'
      responses:
        '202':
          description: The updated credit transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:update
  /v2/credit-transfers/{id}/events:
    get:
      summary: List credit transfer events
      description: Retrieve events for a specific credit transfer. Returns a list of events. For further details on Pagination, see the section above.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of credit transfer events.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Event'
                        type: array
                    type: object
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:read
  /v2/credit-transfers/{id}:approve:
    post:
      summary: Approve credit transfer
      description: Approve the specified credit transfer.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovePaymentRequest'
      responses:
        '202':
          description: The now approved credit transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransfer'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:update
  /v2/credit-transfers/{id}:reject:
    post:
      summary: Reject credit transfer
      description: Reject the specified credit transfer.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectPaymentRequest'
      responses:
        '202':
          description: The now rejected credit transfer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransfer'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:update
  /v2beta/credit-transfer-batches:
    post:
      summary: Create credit transfer batch
      description: |-
        Create a batch of credit transfer payments.

        See https://docs.atlar.com/docs/batch-payments for more information.
      tags:
        - Credit Transfers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditTransferBatchRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                treatment:
                  $ref: '#/components/schemas/BatchTreatmentType'
                fileContentType:
                  type: string
                  $ref: '#/components/schemas/CreditTransferBatchContentType'
                file:
                  type: string
                  format: binary
              required:
                - treatment
                - fileContentType
                - file
      responses:
        '201':
          description: The created credit transfer batch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferBatch'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - credit_transfers:create
            - accounts:read
            - external_accounts:read
            - counterparties:read
    get:
      summary: List credit transfer batches
      description: Returns a list of credit transfer batches.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: A list of credit transfer batches.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/CreditTransferBatch'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - credit_transfers:read
  /v2beta/credit-transfer-batches/{id}:
    get:
      summary: Get credit transfer batch
      description: Retrieve a specific credit transfer batch.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: A credit transfer batch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferBatch'
        '404':
          $ref: '#/components/responses/NotFound'
  /v2beta/credit-transfer-batches/{id}/results:
    get:
      summary: List credit transfer batch results
      description: |-
        List processing results for individual credit transfer requests that were part of a credit transfer batch.
        The result items represent the result(s) of processing the batch request input but doesn't <b>not</b> represent the end-to-end processing of the payment.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - description: |
            Filter based on presence of `errors`. If `true`, only
            results with at least one error will be included. If `false`, only
            results with no errors will be included.
          in: query
          name: errors
          schema:
            type: boolean
        - description: |
            Filter based on `skipped`. If `true`, only results related
            to input record that were skipped will be included. If
            `false`, only results that are not related to skipped
            input records will be included.
          in: query
          name: skipped
          schema:
            type: boolean
      responses:
        '200':
          description: A list of payment batch results.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/BatchResult'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: |
            Not found will be returned if no payment batch with given
            id exists or if the payment batch is not yet in status
            `COMPLETED`.
          $ref: '#/components/responses/NotFound'
  /v2/credit-transfer-batches/{id}:approve:
    post:
      summary: Approve credit transfer batch
      description: |-
        Approve the batch of credit transfers.

        Approval of a batch is only applicable when the batch `treatment` is `BATCH`.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveBatchRequest'
      responses:
        '202':
          description: |-
            The request to approve the batch and all the payments it
            contains has been accepted.

            Note that the approval status of the individual payments
            may be processed asynchronous.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferBatch'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:update
  /v2/credit-transfer-batches/{id}:reject:
    post:
      summary: Reject credit transfer batch
      description: |-
        Reject the batch of credit transfers.

        Rejection of a batch is only applicable when the batch `treatment` is `BATCH`.
      tags:
        - Credit Transfers
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectPaymentRequest'
      responses:
        '202':
          description: |-
            The request to reject the batch and all the payments it
            contains has been accepted.

            Note that the rejection status of the individual payments
            may be processed asynchronous.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferBatch'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - credit_transfers:update
  /v2/direct-debits:
    post:
      summary: Create direct debit
      description: Create a direct debit payment.
      tags:
        - Direct Debits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectDebitRequest'
      responses:
        '201':
          description: The created direct debit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebit'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - direct_debits:create
            - accounts:read
            - external_accounts:read
            - counterparties:read
    get:
      summary: List direct debits
      description: Returns a list of direct debits. For further details on Pagination, see general section above. Sort order is always descending on date.
      tags:
        - Direct Debits
      parameters:
        - description: Include only direct debits for the given destination account.
          in: query
          name: accountId
          schema:
            type: string
        - description: Include only direct debits with the given status.
          in: query
          name: status
          schema:
            $ref: '#/components/schemas/PaymentStatus'
        - description: Include only direct debits with property `date` matching the given value. The parameter value may be either a string for equality matching, or an object for range-like matching criteria.
          in: query
          name: date
          explode: true
          style: deepObject
          schema:
            oneOf:
              - type: string
                format: date
                example: '2022-01-15'
                description: Include only direct debits with `date` equal to the given value.
              - type: object
                properties:
                  gte:
                    type: string
                    format: date
                    example: '2022-01-01'
                    description: Include only direct debits with `date` after or equal to given date.
                  lte:
                    type: string
                    format: date
                    example: '2022-01-31'
                    description: Include only direct debits with `date` before or equal to given date.
                  eq:
                    type: string
                    format: date
                    example: '2022-01-15'
                    description: Include only direct debits with `date` equal to given date.
        - description: Include only direct debits with the given direct debit scheme.
          in: query
          name: scheme
          schema:
            $ref: '#/components/schemas/DirectDebitSchemeType'
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of direct debits.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/DirectDebit'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - direct_debits:read
  /v2/direct-debits/{id}:
    get:
      summary: Get direct debit
      description: Retrieve a specific direct debit.
      tags:
        - Direct Debits
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: Direct debit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebit'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - direct_debits:read
  /v2/direct-debits/{id}/events:
    get:
      summary: List direct debit events
      description: Retrieve events for a specific direct debit. Returns a list of events. For further details on Pagination, see the section above.
      tags:
        - Direct Debits
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of direct debit events.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Event'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - direct_debits:read
  /v2/direct-debits/{id}:approve:
    post:
      summary: Approve direct debit
      description: Approve the specified direct debit.
      tags:
        - Direct Debits
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovePaymentRequest'
      responses:
        '202':
          description: The now approved direct debit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebit'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - direct_debits:update
  /v2/direct-debits/{id}:reject:
    post:
      summary: Reject direct debit
      description: Reject the specified direct debit.
      tags:
        - Direct Debits
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectPaymentRequest'
      responses:
        '202':
          description: The now rejected direct debit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDebit'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - direct_debits:update
  /v2/external-accounts/{id}:
    get:
      summary: Get external account
      description: Retrieve a specific external account.
      tags:
        - External Accounts
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: An external account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccount'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - external_accounts:read
    patch:
      summary: Update external account
      description: Update external account.
      tags:
        - External Accounts
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExternalAccountJSONPatchRequest'
      responses:
        '200':
          description: Updated account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccount'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - external_accounts:update
    delete:
      summary: Delete external account
      description: Deletes the specified external account.
      tags:
        - External Accounts
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - external_accounts:delete
  /v2/external-accounts:
    post:
      summary: Create external account
      description: Create an external account associated with a Counterparty. A maximum of 10 accounts can be created per counterparty.
      tags:
        - External Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalAccountRequest'
      responses:
        '201':
          description: Created account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - external_accounts:create
    get:
      summary: List external accounts
      description: Returns a list of external accounts. For further details on Pagination, see general section above.
      tags:
        - External Accounts
      parameters:
        - description: Free text search of external account identifiers.
          in: query
          name: query
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - description: The ID of a counterparty.
          in: query
          name: counterpartyId
          schema:
            type: string
        - in: query
          name: entityIdsIn
          explode: true
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of external accounts.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/ExternalAccount'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - external_accounts:read
  /v2/counterparties:
    post:
      summary: Create counterparty
      description: Create a new counterparty.
      tags:
        - Counterparties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCounterpartyRequest'
      responses:
        '201':
          description: The created counterparty.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - counterparties:create
    get:
      summary: List counterparties
      description: Returns a list of counterparties. For further details on Pagination, see general section above.
      tags:
        - Counterparties
      parameters:
        - description: Free text search query term for counterparty name, account identifiers and external metadata. Must be at least 3 characters.
          in: query
          name: query
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - in: query
          name: entityIdsIn
          explode: true
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of counterparties.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Counterparty'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - counterparties:read
  /v2/counterparties/{id}:
    get:
      summary: Get counterparty
      description: Retrieve a specific counterparty.
      tags:
        - Counterparties
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: A counterparty.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - counterparties:read
    patch:
      summary: Update counterparty
      description: Update a counterparty.
      tags:
        - Counterparties
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CounterpartyJSONPatchRequest'
      responses:
        '200':
          description: The updated counterparty.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - counterparties:update
    delete:
      summary: Delete counterparty
      description: Deletes the specified counterparty.
      tags:
        - Counterparties
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - counterparties:delete
            - external_accounts:delete
  /v2/mandates:
    post:
      summary: Create mandate
      description: Create a new direct debit mandate.
      tags:
        - Mandates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMandateRequest'
      responses:
        '201':
          description: The created mandate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - mandates:create
            - external_accounts:read
            - counterparties:read
    get:
      summary: List mandates
      description: Returns a list of mandates. For further details on Pagination, see general section above.
      tags:
        - Mandates
      parameters:
        - description: Include only mandates associated with the given external account.
          in: query
          name: externalAccountId
          schema:
            type: string
        - description: Include only mandates associated with the given counterparty.
          in: query
          name: counterpartyId
          schema:
            type: string
        - description: Include only mandates with the given status.
          in: query
          name: status
          schema:
            $ref: '#/components/schemas/MandateStatus'
        - description: Include only mandates with the payment scheme.
          in: query
          name: scheme
          schema:
            $ref: '#/components/schemas/DirectDebitSchemeType'
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of mandates.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Mandate'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - basicAuth:
            - mandates:read
  /v2/mandates/{id}:
    get:
      summary: Get mandate
      description: Retrieve a specific mandate.
      tags:
        - Mandates
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
      responses:
        '200':
          description: A mandate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - mandates:read
  /v2/mandates/{id}/events:
    get:
      summary: List mandate events
      description: Retrieve events for a specific mandate. Returns a list of events. For further details on Pagination, see the section above.
      tags:
        - Mandates
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - $ref: '#/components/parameters/QueryLimit'
        - $ref: '#/components/parameters/PaginationToken'
      responses:
        '200':
          description: List of mandate events.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - properties:
                      items:
                        items:
                          $ref: '#/components/schemas/Event'
                        type: array
                    type: object
        '400':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - mandates:read
  /v2/mandates/{id}:cancel:
    post:
      summary: Cancel mandate
      description: Cancel a specific mandate.
      tags:
        - Mandates
      parameters:
        - $ref: '#/components/parameters/ResourceIDOrExternalID'
        - $ref: '#/components/parameters/IfMatchETag'
      responses:
        '202':
          description: The cancelled mandate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mandate'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - basicAuth:
            - mandates:update
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    ResourceID:
      in: path
      name: id
      description: Atlar resource ID.
      schema:
        type: string
        pattern: ^[a-zA-Z0-9\-]{1,256}$
      required: true
    ResourceIDOrExternalID:
      in: path
      name: id
      description: Atlar resource ID or External ID. Prefix External IDs with `external:`.
      schema:
        type: string
        pattern: ^external:[a-zA-Z0-9._\-+=]{1,64}$|^[a-zA-Z0-9\-]{1,256}$
      required: true
    IfMatchETag:
      in: header
      name: If-Match
      description: ETag (version) of resource to be updated.
      schema:
        type: string
        pattern: ^version:\d{1,4}$
    QueryLimit:
      in: query
      name: limit
      description: Limit the number of items in resulting query response.
      schema:
        type: integer
        default: 100
        minimum: 1
        maximum: 500
    PaginationToken:
      in: query
      name: token
      description: If a query response contains a non-empty `nextToken`, use that value as `token` query parameter to continue pagination.
      schema:
        type: string
  schemas:
    BatchAmountSums:
      type: array
      items:
        $ref: '#/components/schemas/Amount'
      readOnly: true
    BatchInputContent:
      type: object
      readOnly: true
      properties:
        contentType:
          type: string
        recordCount:
          type: integer
          readOnly: true
        size:
          type: integer
          format: int64
        checksum:
          type: string
        filename:
          type: string
      required:
        - recordCount
        - contentType
        - size
        - checksum
    BatchErrors:
      type: array
      items:
        $ref: '#/components/schemas/ErrorDetails'
        minItems: 0
        maxItems: 255
    BatchResultSummary:
      type: object
      properties:
        total:
          type: integer
        succeeded:
          type: integer
        failed:
          type: integer
        skipped:
          type: integer
      required:
        - total
        - succeeded
        - failed
        - skipped
    BatchStatus:
      type: string
      enum:
        - CREATED
        - PROCESSING_STARTED
        - COMPLETED
    ErrorDetails:
      type: object
      properties:
        code:
          type: string
        error:
          type: string
        field:
          type: string
    Metadata:
      type: object
      additionalProperties:
        type: string
      maxProperties: 12
      x-omitempty: true
      nullable: true
    ListResponse:
      type: object
      properties:
        items: {}
        nextToken:
          type: string
        token:
          type: string
        limit:
          type: integer
      required:
        - items
        - nextToken
        - token
        - limit
    Event:
      type: object
      properties:
        id:
          type: integer
        organizationId:
          type: string
          readOnly: true
        entityId:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        type:
          $ref: '#/components/schemas/EventType'
        name:
          type: string
        timestamp:
          type: string
          format: date-time
        details:
          type: object
          additionalProperties:
            type: string
        message:
          type: string
        originator:
          type: string
      required:
        - id
        - organizationId
        - entityId
        - type
        - name
        - originator
        - timestamp
    CurrencyCode:
      type: string
      minLength: 3
      maxLength: 3
      pattern: ^[A-Z]{3,3}$
    MarketCode:
      type: string
      minLength: 2
      maxLength: 2
      pattern: ^[A-Z]{2,2}$
    AccountIdentifier:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountIdentifierType'
        market:
          $ref: '#/components/schemas/MarketCode'
          description: |-
            The market of the `AccountIdentifier` specifies in which market-context the identifier should be treated.

            A `NUMBER` from Sweden does not look and does not validate in the same way as a `NUMBER` from GB. The market
            code is, in most cases, the same as where the account itself is domiciled, but not necessarily. An examples
            of this discrepancy is Jersey which may have domiciled accounts with market `JE`, but the account identifier
            would be an `IBAN` with country code `GB`.
        number:
          type: string
          minLength: 1
          maxLength: 255
        invalid:
          type: boolean
          readOnly: true
      required:
        - type
        - market
        - number
    AccountIdentifierType:
      type: string
      enum:
        - IBAN
        - NUMBER
        - SE_BANKGIRO
        - SE_PLUSGIRO
        - DK_FIK
        - ADYEN
        - PAYPAL
        - SOLDO
        - WALLET_SWISSQUOTE
        - WALLET_AIRWALLEX
        - WALLET_HYPERWALLET
        - WALLET_PAYHAWK
        - WALLET_STRIPE
        - AU_BPAY_BILLER_CODE
    RoutingIdentifierType:
      type: string
      enum:
        - BIC
        - AT_BLZ
        - AU_BSB
        - CA_CPA
        - CH_BCC
        - CH_SIC
        - CN_APS
        - DE_BLZ
        - ES_NCC
        - GB_DSC
        - GR_BIC
        - HK_NCC
        - IE_NCC
        - IN_FSC
        - IT_NCC
        - JP_ZGN
        - NZ_NCC
        - PL_KNR
        - PT_NCC
        - RU_CBC
        - SE_SBA
        - SG_IBG
        - TH_CBC
        - TW_NCC
        - US_ABA
        - US_PID
        - ZA_NCC
    NationalIdentifier:
      type: object
      properties:
        type:
          type: string
          enum:
            - CIVIC
            - COMPANY
        market:
          $ref: '#/components/schemas/MarketCode'
        number:
          type: string
      required:
        - type
        - market
        - number
    Amount:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        stringValue:
          type: string
        value:
          type: integer
          format: int64
      required:
        - currency
        - stringValue
        - value
    AmountInput:
      oneOf:
        - $ref: '#/components/schemas/AmountIntegerValueInput'
        - $ref: '#/components/schemas/AmountStringValueInput'
    AccountType:
      type: string
      enum:
        - ACCOUNT
        - EXTERNAL_ACCOUNT
        - INLINE
    CategoryPurpose:
      type: string
    ExternalAccountRef:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        id:
          type: string
      required:
        - type
        - id
    InternalAccountRef:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        id:
          type: string
      required:
        - type
        - id
    InlineExternalAccount:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        market:
          $ref: '#/components/schemas/MarketCode'
          readOnly: true
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          maxItems: 1
          uniqueItems: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          uniqueItems: true
          maxItems: 2
          x-omitempty: true
        holder:
          $ref: '#/components/schemas/InlineAccountHolder'
      required:
        - type
        - market
        - identifiers
        - holder
    InlineAccountHolder:
      type: object
      properties:
        legalName:
          type: string
          readOnly: true
      required:
        - legalName
    AccountHolder:
      type: object
      properties:
        type:
          type: string
          enum:
            - COUNTERPARTY
            - ENTITY
          readOnly: true
        id:
          type: string
          readOnly: true
        legalName:
          type: string
          readOnly: true
        address:
          description: Postal address of the account holder.
          $ref: '#/components/schemas/Address'
          readOnly: true
        nationalIdentifier:
          description: The national identifier of the account holder.
          $ref: '#/components/schemas/NationalIdentifier'
          readOnly: true
        partyType:
          description: The party type of the account holder.
          $ref: '#/components/schemas/PartyType'
          readOnly: true
      required:
        - type
        - id
        - legalName
    AccountSnapshot:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        market:
          $ref: '#/components/schemas/MarketCode'
          readOnly: true
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          uniqueItems: true
          readOnly: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          uniqueItems: true
          maxItems: 5
          readOnly: true
        currency:
          $ref: '#/components/schemas/CurrencyCode'
          readOnly: true
      required:
        - type
        - id
        - organizationId
        - market
        - currency
        - identifiers
        - routing
    ExternalAccountSnapshot:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
          readOnly: true
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        market:
          $ref: '#/components/schemas/MarketCode'
          readOnly: true
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          uniqueItems: true
          readOnly: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          uniqueItems: true
          readOnly: true
          x-omitempty: true
      required:
        - type
        - id
        - organizationId
        - market
        - identifiers
    ExternalAccount:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        counterpartyId:
          type: string
          readOnly: true
        entityIds:
          type: array
          items:
            type: string
            description: Unique resource identifier.
            readOnly: true
            minLength: 32
            maxLength: 64
          maxItems: 100
          uniqueItems: true
          readOnly: true
          x-omitempty: true
        market:
          $ref: '#/components/schemas/MarketCode'
          readOnly: true
        name:
          type: string
          maxLength: 255
          readOnly: true
        alias:
          type: string
          maxLength: 255
          readOnly: true
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          uniqueItems: true
          readOnly: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          uniqueItems: true
          readOnly: true
          x-omitempty: true
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
          minimum: 1
          readOnly: true
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
      required:
        - id
        - organizationId
        - counterpartyId
        - market
        - name
        - identifiers
        - created
        - updated
        - version
        - etag
    CreateExternalAccountRequest:
      type: object
      properties:
        counterpartyId:
          type: string
        market:
          $ref: '#/components/schemas/MarketCode'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          maxItems: 1
          uniqueItems: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          maxItems: 5
          uniqueItems: true
          x-omitempty: true
        alias:
          type: string
          maxLength: 255
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - counterpartyId
        - market
        - identifiers
    ExternalAccountJSONPatchRequest:
      externalDocs:
        url: https://jsonpatch.com/
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/ExternalAccountJSONPatchRemoveAlias'
          - $ref: '#/components/schemas/ExternalAccountJSONPatchReplaceAlias'
          - $ref: '#/components/schemas/ExternalAccountJSONPatchAddIdentifiers'
          - $ref: '#/components/schemas/ExternalAccountJSONPatchAddRouting'
    ExternalAccountJSONPatchRemoveAlias:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /alias
      additionalProperties: false
      required:
        - op
        - path
    ExternalAccountJSONPatchReplaceAlias:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /alias
        value:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - op
        - path
        - value
    ExternalAccountJSONPatchAddIdentifiers:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
        path:
          type: string
          enum:
            - /identifiers/-
        value:
          $ref: '#/components/schemas/AccountIdentifier'
      additionalProperties: false
      required:
        - op
        - path
        - value
    ExternalAccountJSONPatchAddRouting:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
        path:
          type: string
          enum:
            - /routing/-
        value:
          $ref: '#/components/schemas/RoutingIdentifier'
      additionalProperties: false
      required:
        - op
        - path
        - value
    Counterparty:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        legalName:
          type: string
          readOnly: true
        partyType:
          $ref: '#/components/schemas/PartyType'
          readOnly: true
        alias:
          type: string
          readOnly: true
        address:
          description: Address details for the counterparty.
          $ref: '#/components/schemas/Address'
          readOnly: true
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ExternalAccount'
          maxItems: 10
          readOnly: true
          x-omitempty: true
        email:
          type: string
          readOnly: true
        phone:
          type: string
          readOnly: true
        nationalIdentifier:
          description: The national identifier of the counterparty.
          $ref: '#/components/schemas/NationalIdentifier'
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
          minimum: 1
          readOnly: true
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
        entityIds:
          type: array
          items:
            type: string
            description: Unique resource identifier.
            readOnly: true
            minLength: 32
            maxLength: 64
          maxItems: 100
          uniqueItems: true
          readOnly: true
          x-omitempty: true
      required:
        - id
        - organizationId
        - legalName
        - created
        - updated
        - version
        - etag
    CreateCounterpartyRequest:
      type: object
      properties:
        legalName:
          type: string
          maxLength: 96
        alias:
          type: string
          maxLength: 255
        partyType:
          $ref: '#/components/schemas/PartyType'
        address:
          description: Address details for the counterparty.
          $ref: '#/components/schemas/Address'
        email:
          type: string
          maxLength: 256
        phone:
          type: string
          maxLength: 64
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CreateEmbeddedExternalAccountRequest'
          x-omitempty: true
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
        nationalIdentifier:
          description: The national identifier of the counterparty.
          $ref: '#/components/schemas/NationalIdentifier'
        entityIds:
          type: array
          items:
            type: string
            description: Unique resource identifier.
            readOnly: true
            minLength: 32
            maxLength: 64
          maxItems: 100
          uniqueItems: true
          x-omitempty: true
      required:
        - legalName
    CounterpartyJSONPatchRequest:
      externalDocs:
        url: https://jsonpatch.com/
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceLegalName'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceAlias'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemoveAlias'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceNationalIdentifier'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemoveNationalIdentifier'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceEmail'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemoveEmail'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceAddress'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplacePhone'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemovePhone'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplacePartyType'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemovePartyType'
          - $ref: '#/components/schemas/CounterpartyJSONPatchReplaceEntityIds'
          - $ref: '#/components/schemas/CounterpartyJSONPatchRemoveEntityIds'
    CounterpartyJSONPatchReplaceLegalName:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /legalName
        value:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchReplaceAlias:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /alias
        value:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemoveAlias:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /alias
      additionalProperties: false
      required:
        - op
        - path
    CounterpartyJSONPatchReplaceNationalIdentifier:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /nationalIdentifier
        value:
          $ref: '#/components/schemas/NationalIdentifier'
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemoveNationalIdentifier:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /nationalIdentifier
      additionalProperties: false
      required:
        - op
        - path
    CounterpartyJSONPatchReplaceEmail:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /email
        value:
          type: string
          maxLength: 256
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemoveEmail:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /email
      additionalProperties: false
      required:
        - op
        - path
    CounterpartyJSONPatchReplacePhone:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /phone
        value:
          type: string
          maxLength: 64
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemovePhone:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /phone
      additionalProperties: false
      required:
        - op
        - path
    CounterpartyJSONPatchReplacePartyType:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /partyType
        value:
          type: string
          $ref: '#/components/schemas/PartyType'
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemovePartyType:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /partyType
      additionalProperties: false
      required:
        - op
        - path
    CounterpartyJSONPatchReplaceAddress:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /address
        value:
          $ref: '#/components/schemas/Address'
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchReplaceEntityIds:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /entityIds
        value:
          type: array
          items:
            type: string
            description: Unique resource identifier.
            readOnly: true
            minLength: 32
            maxLength: 64
          maxItems: 100
          uniqueItems: true
      additionalProperties: false
      required:
        - op
        - path
        - value
    CounterpartyJSONPatchRemoveEntityIds:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /entityIds
      additionalProperties: false
      required:
        - op
        - path
    ApprovalStep:
      type: object
      properties:
        requiredRoleIds:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 10
          uniqueItems: true
          x-omitempty: true
        allowCreatorApproval:
          type: boolean
    TriggerConditionInput:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/AmountConditionInput'
        creatorRoleId:
          $ref: '#/components/schemas/CreatorRoleCondition'
        initiatingEntityId:
          $ref: '#/components/schemas/InitiatingEntityCondition'
    AmountConditionInput:
      type: object
      properties:
        lt:
          $ref: '#/components/schemas/AmountInput'
        convertCurrency:
          type: boolean
      required:
        - lt
    IdEqualityCondition:
      type: object
      properties:
        in:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 36
          minItems: 1
          maxItems: 100
          x-omitempty: true
        notIn:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 36
          minItems: 1
          maxItems: 100
          x-omitempty: true
    CreatorRoleCondition:
      description: Trigger condition based on the creator role.
      $ref: '#/components/schemas/IdEqualityCondition'
    InitiatingEntityCondition:
      description: Trigger condition based on the entity of the initiating account.
      $ref: '#/components/schemas/IdEqualityCondition'
    AmountCondition:
      type: object
      properties:
        lt:
          $ref: '#/components/schemas/Amount'
        convertCurrency:
          type: boolean
    TriggerCondition:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/AmountCondition'
        creatorRoleId:
          $ref: '#/components/schemas/CreatorRoleCondition'
        initiatingEntityId:
          $ref: '#/components/schemas/InitiatingEntityCondition'
    ApprovalChainJSONPatchAddReplaceName:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
        path:
          type: string
          enum:
            - /name
        value:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - op
        - path
        - value
    ApprovalChainJSONPatchAddReplaceAutoApprove:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
        path:
          type: string
          enum:
            - /autoApprove
        value:
          type: boolean
      additionalProperties: false
      required:
        - op
        - path
        - value
    ApprovalChainJSONPatchRemove:
      type: object
      properties:
        op:
          type: string
          enum:
            - remove
        path:
          type: string
          enum:
            - /autoApprove
            - /approvalSteps
      additionalProperties: false
      required:
        - op
        - path
    ApprovalChainJSONPatchAddReplaceApprovalSteps:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
        path:
          type: string
          enum:
            - /approvalSteps
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalStep'
      additionalProperties: false
      required:
        - op
        - path
        - value
    ApprovalChainJSONPatchAddReplaceTriggerCondition:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
        path:
          type: string
          enum:
            - /triggerCondition
        value:
          $ref: '#/components/schemas/TriggerConditionInput'
      additionalProperties: false
      required:
        - op
        - path
        - value
    CreateEmbeddedExternalAccountRequest:
      type: object
      properties:
        market:
          $ref: '#/components/schemas/MarketCode'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          minItems: 1
          maxItems: 1
          uniqueItems: true
        routing:
          type: array
          items:
            $ref: '#/components/schemas/RoutingIdentifier'
          maxItems: 5
          uniqueItems: true
          x-omitempty: true
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - market
        - identifiers
    Mandate:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        counterpartyId:
          type: string
          readOnly: true
        externalAccountId:
          type: string
        destinationAccountId:
          type: string
        connectionInstructionId:
          type: string
          readOnly: true
        source:
          description: Source account from which funds will be collected. This account will be debited.
          $ref: '#/components/schemas/ExternalAccountSnapshot'
          readOnly: true
        sourceHolder:
          $ref: '#/components/schemas/AccountHolder'
          readOnly: true
        creditorReference:
          type: string
        scheme:
          $ref: '#/components/schemas/DirectDebitSchemeType'
        mandateReference:
          type: string
          minLength: 1
          maxLength: 35
        signatureDate:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/MandateStatus'
          description: The current status of a mandate.
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
        version:
          type: integer
          minimum: 1
          readOnly: true
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - organizationId
        - counterpartyId
        - externalAccountId
        - source
        - sourceHolder
        - scheme
        - creditorReference
        - mandateReference
        - status
        - version
        - etag
        - created
        - updated
    CreateMandateRequest:
      type: object
      properties:
        active:
          type: boolean
        scheme:
          $ref: '#/components/schemas/DirectDebitSchemeType'
        externalAccountId:
          type: string
        destinationAccountId:
          type: string
        creditorReference:
          type: string
          minLength: 1
          maxLength: 35
        mandateReference:
          type: string
          minLength: 1
          maxLength: 35
        signatureDate:
          type: string
          format: date
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - scheme
        - externalAccountId
        - creditorReference
        - mandateReference
    MandateStatus:
      type: string
      enum:
        - CREATED
        - PENDING_CANCELLATION
        - PENDING_CANCELLATION_SUBMISSION
        - CANCELLATION_SENT
        - PENDING_SUBMISSION
        - SENT
        - ACCEPTED
        - ACTIVE
        - FAILED
        - CANCELLED
        - UNKNOWN
    PaymentReference:
      type: string
      maxLength: 140
    BatchTreatmentType:
      type: string
      enum:
        - INDIVIDUAL_PAYMENTS
        - BATCH
    BatchResult:
      type: object
      properties:
        paymentId:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
            minItems: 0
          x-omitempty: true
        skipped:
          type: boolean
        recordIndex:
          type: integer
    BatchResultsSummary:
      type: object
      properties:
        total:
          type: integer
        succeeded:
          type: integer
        failed:
          type: integer
        skipped:
          type: integer
        processed:
          $ref: '#/components/schemas/BatchResultSummary'
        sums:
          $ref: '#/components/schemas/BatchAmountSums'
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
      required:
        - total
        - succeeded
        - failed
        - skipped
        - processed
        - sums
    PaymentApprovalStep:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        approvalChainId:
          type: string
          readOnly: true
        requiredRoleIds:
          type: array
          items:
            type: string
          maxItems: 10
          uniqueItems: true
          readOnly: true
          x-omitempty: true
        status:
          description: The status of the approval step. `PENDING` if step is not yet interacted with.
          $ref: '#/components/schemas/ApprovalStatus'
          readOnly: true
        approver:
          description: User information about the user who approved/rejected. Omitted if step is not yet approved/rejected.
          $ref: '#/components/schemas/UserAuditInfo'
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        autoApproved:
          type: boolean
        allowCreatorApproval:
          type: boolean
          readOnly: true
        batchId:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
      required:
        - id
        - status
        - approvalChainId
        - autoApproved
    ApprovalStatus:
      type: string
      enum:
        - PENDING
        - APPROVED
        - REJECTED
    ApprovePaymentRequest:
      type: object
      properties:
        approvalStepId:
          type: string
      required:
        - approvalStepId
    ApproveBatchRequest:
      type: object
      properties:
        approvalStepId:
          type: string
      required:
        - approvalStepId
    RejectPaymentRequest:
      type: object
      properties:
        reason:
          type: string
          maxLength: 255
    UserAuditInfo:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        username:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        roleId:
          type: string
          readOnly: true
      required:
        - id
        - username
    PaymentStatus:
      type: string
      enum:
        - CREATED
        - APPROVED
        - REJECTED
        - PENDING_SUBMISSION
        - SENT
        - PENDING_AT_BANK
        - ACCEPTED
        - EXECUTED
        - FAILED
        - RETURNED
        - UNKNOWN
    AttachedTransactionRef:
      type: object
      properties:
        type:
          type: string
          enum:
            - TRANSACTION
          readOnly: true
        id:
          type: string
          readOnly: true
      required:
        - type
        - id
    CreditTransfer:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        creatorUserId:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        amount:
          $ref: '#/components/schemas/Amount'
          readOnly: true
        scheme:
          $ref: '#/components/schemas/CreditTransferSchemeType'
          readOnly: true
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetails'
          readOnly: true
        date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/PaymentStatus'
          readOnly: true
        source:
          $ref: '#/components/schemas/AccountSnapshot'
          description: Source account from which funds will be withdrawn. This account will be debited.
          readOnly: true
        sourceHolder:
          $ref: '#/components/schemas/AccountHolder'
          readOnly: true
        destination:
          oneOf:
            - $ref: '#/components/schemas/ExternalAccountSnapshot'
            - $ref: '#/components/schemas/AccountSnapshot'
          discriminator:
            propertyName: type
            mapping:
              ACCOUNT: '#/components/schemas/AccountSnapshot'
              EXTERNAL_ACCOUNT: '#/components/schemas/ExternalAccountSnapshot'
          readOnly: true
        destinationHolder:
          $ref: '#/components/schemas/AccountHolder'
          readOnly: true
        approvalSteps:
          type: array
          items:
            $ref: '#/components/schemas/PaymentApprovalStep'
          readOnly: true
        attachedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/AttachedTransactionRef'
          readOnly: true
        reference:
          $ref: '#/components/schemas/PaymentReference'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        regulatoryReporting:
          type: array
          x-omitempty: true
          items:
            $ref: '#/components/schemas/RegulatoryReportingDetails'
          maxItems: 10
          readOnly: true
        connectionInstructionId:
          type: string
          readOnly: true
        batch:
          description: Details of the associated payments batch if the credit transfer was created as part of a batch.
          $ref: '#/components/schemas/BatchDetails'
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        version:
          type: integer
          minimum: 1
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - organizationId
        - amount
        - scheme
        - date
        - status
        - source
        - sourceHolder
        - destination
        - destinationHolder
        - reference
        - approvalSteps
        - version
        - etag
        - created
        - updated
        - attachedTransactions
    CreditTransferDestination:
      oneOf:
        - $ref: '#/components/schemas/InternalAccountRef'
        - $ref: '#/components/schemas/ExternalAccountRef'
        - $ref: '#/components/schemas/InlineExternalAccount'
      discriminator:
        propertyName: type
        mapping:
          ACCOUNT: '#/components/schemas/InternalAccountRef'
          EXTERNAL_ACCOUNT: '#/components/schemas/ExternalAccountRef'
          INLINE: '#/components/schemas/InlineExternalAccount'
    BatchDetails:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        treatment:
          $ref: '#/components/schemas/BatchTreatmentType'
      required:
        - id
        - treatment
    CreateCreditTransferRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/AmountInput'
        scheme:
          $ref: '#/components/schemas/CreditTransferSchemeType'
        schemeDetails:
          $ref: '#/components/schemas/SchemeDetailsInput'
        date:
          type: string
          format: date
        source:
          description: A reference identifying the source account (as found from `/financial-data/v2/accounts`).
          $ref: '#/components/schemas/InternalAccountRef'
        destination:
          $ref: '#/components/schemas/CreditTransferDestination'
        reference:
          $ref: '#/components/schemas/PaymentReference'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        regulatoryReporting:
          type: array
          maxItems: 10
          x-omitempty: true
          items:
            $ref: '#/components/schemas/RegulatoryReportingDetails'
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - amount
        - scheme
        - date
        - source
        - destination
        - reference
    CreditTransferJSONPatchRequest:
      externalDocs:
        url: https://jsonpatch.com/
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/CreditTransferJSONPatchReplaceDate'
          - $ref: '#/components/schemas/CreditTransferJSONPatchReplaceStatus'
    CreditTransferJSONPatchReplaceDate:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /date
        value:
          type: string
          format: date
      additionalProperties: false
      required:
        - op
        - path
        - value
    CreditTransferJSONPatchReplaceStatus:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /status
        value:
          $ref: '#/components/schemas/PaymentStatus'
          example: RETURNED
      additionalProperties: false
      required:
        - op
        - path
        - value
    CreditTransferBatch:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        treatment:
          $ref: '#/components/schemas/BatchTreatmentType'
        inputContent:
          $ref: '#/components/schemas/BatchInputContent'
        results:
          description: |
            Deprecated - use `resultSummary` and `resultDetails`. Summary of processing results.

            The summary is only populated when the batch `status` is `COMPLETED`.

            Detailed processing results can be retrieved using
            https://docs.atlar.com/v2.0/reference/get_payments-v2beta-credit-transfer-batches-id-results.
          $ref: '#/components/schemas/BatchResultsSummary'
          readOnly: true
        resultSummary:
          $ref: '#/components/schemas/BatchResultSummary'
        status:
          $ref: '#/components/schemas/BatchStatus'
          readOnly: true
        errors:
          $ref: '#/components/schemas/BatchErrors'
        approvalSteps:
          type: array
          items:
            $ref: '#/components/schemas/PaymentApprovalStep'
          readOnly: true
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
        version:
          type: integer
          minimum: 1
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
        - treatment
        - id
        - organizationId
        - etag
        - status
        - version
        - created
        - updated
        - input
        - inputContent
        - inputDetails
        - approvalSteps
    PreviewableCreditTransferBatch:
      allOf:
        - $ref: '#/components/schemas/CreditTransferBatch'
        - type: object
          properties:
            records:
              type: array
              items:
                $ref: '#/components/schemas/CreateCreditTransferRequest'
    CreditTransferBatchContentType:
      type: string
      enum:
        - application/vnd.atlar.payments.v2.credit-transfer.batch+csv
        - application/vnd.atlar.payments.v2.credit-transfer.batch+json
    CreateCreditTransferBatchRequest:
      type: object
      properties:
        treatment:
          $ref: '#/components/schemas/BatchTreatmentType'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/CreateCreditTransferRequest'
          minItems: 1
          maxItems: 1000
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
      required:
        - treatment
        - payments
    DirectDebit:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        organizationId:
          type: string
          readOnly: true
        creatorUserId:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        amount:
          $ref: '#/components/schemas/Amount'
          readOnly: true
        scheme:
          $ref: '#/components/schemas/DirectDebitSchemeType'
          readOnly: true
        date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/PaymentStatus'
          readOnly: true
        destination:
          description: Destination account which will receive funds. This account will be credited.
          $ref: '#/components/schemas/AccountSnapshot'
          readOnly: true
        destinationHolder:
          $ref: '#/components/schemas/AccountHolder'
          readOnly: true
        source:
          description: Source account from which funds will be collected. This account will be debited.
          $ref: '#/components/schemas/ExternalAccountSnapshot'
          readOnly: true
        sourceHolder:
          $ref: '#/components/schemas/AccountHolder'
          readOnly: true
        mandate:
          description: The mandate which represents the end user's consent to executing this direct debit.
          $ref: '#/components/schemas/MandateSnapshot'
          readOnly: true
        approvalSteps:
          type: array
          items:
            $ref: '#/components/schemas/PaymentApprovalStep'
          readOnly: true
        attachedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/AttachedTransactionRef'
          readOnly: true
        reference:
          $ref: '#/components/schemas/PaymentReference'
          readOnly: true
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
          readOnly: true
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
          readOnly: true
        connectionInstructionId:
          type: string
          readOnly: true
        etag:
          type: string
          pattern: ^version:\d{1,4}$
          readOnly: true
          externalDocs:
            url: https://en.wikipedia.org/wiki/HTTP_ETag
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        version:
          type: integer
          minimum: 1
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - organizationId
        - amount
        - scheme
        - date
        - status
        - destination
        - destinationHolder
        - source
        - sourceHolder
        - approvalSteps
        - reference
        - version
        - etag
        - created
        - updated
        - attachedTransactions
    CreateDirectDebitRequest:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/AmountInput'
        scheme:
          $ref: '#/components/schemas/DirectDebitSchemeType'
        date:
          type: string
          format: date
        source:
          oneOf:
            - $ref: '#/components/schemas/ExternalAccountRef'
          discriminator:
            propertyName: type
            mapping:
              EXTERNAL_ACCOUNT: '#/components/schemas/ExternalAccountRef'
        destination:
          $ref: '#/components/schemas/InternalAccountRef'
        reference:
          $ref: '#/components/schemas/PaymentReference'
        categoryPurpose:
          $ref: '#/components/schemas/CategoryPurpose'
        chargeBearer:
          $ref: '#/components/schemas/ChargeBearer'
        externalId:
          type: string
          pattern: ^[a-zA-Z0-9._\-+=]{1,64}$
          x-omitempty: true
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - amount
        - scheme
        - date
        - source
        - destination
        - reference
    DirectDebitJSONPatchReplaceDate:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /date
        value:
          type: string
          format: date
      additionalProperties: false
      required:
        - op
        - path
        - value
    DirectDebitJSONPatchReplaceStatus:
      type: object
      properties:
        op:
          type: string
          enum:
            - replace
        path:
          type: string
          enum:
            - /status
        value:
          $ref: '#/components/schemas/PaymentStatus'
          example: RETURNED
      additionalProperties: false
      required:
        - op
        - path
        - value
    CreditTransferSchemeType:
      type: string
      enum:
        - SCT
        - SCT_INST
        - CROSS_BORDER
        - GB_CT_BACS
        - GB_CT_CHAPS
        - GB_CT_FPS
        - SE_A2A
        - SE_GIRO
        - DK_A2A
        - DK_CT_SAMEDAY
        - DK_CT_INST
        - DK_CT_FIK71
        - DK_CT_FIK73
        - DK_CT_FIK75
        - CH_CT
        - NO_CT
        - NO_CT_KID
        - US_CT_ACH
        - US_CT_WIRE
        - IS_CT
        - AU_CT
        - AU_CT_BPAY
        - IL_CT
        - SG_CT
        - BG_CT
        - MX_CT
        - KR_CT
        - TH_CT
    InstrumentType:
      type: string
      enum:
        - US_ACH
        - CITI_WORLDLINK
    CitiWorldlinkInstrument:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InstrumentType'
        citiWorldlinkId:
          type: string
      required:
        - type
        - citiWorldlinkId
    USACHInstrument:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InstrumentType'
        usAchCompanyId:
          type: string
      required:
        - type
        - usAchCompanyId
    Instrument:
      type: object
      oneOf:
        - $ref: '#/components/schemas/CitiWorldlinkInstrument'
        - $ref: '#/components/schemas/USACHInstrument'
      discriminator:
        propertyName: type
        mapping:
          CITI_WORLDLINK: '#/components/schemas/CitiWorldlinkInstrument'
          US_ACH: '#/components/schemas/USACHInstrument'
    SchemeDetails:
      type: object
      properties:
        instrument:
          $ref: '#/components/schemas/Instrument'
    RoutingConstraints:
      type: object
      properties:
        accountNumberType:
          $ref: '#/components/schemas/AccountIdentifierType'
          x-go-type-skip-optional-pointer: true
        scheme:
          type: string
    RoutingIdentifier:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RoutingIdentifierType'
        number:
          type: string
          minLength: 1
          maxLength: 255
        invalid:
          type: boolean
          readOnly: true
        constraints:
          $ref: '#/components/schemas/RoutingConstraints'
      required:
        - type
        - number
    CountryCode:
      type: string
      minLength: 2
      maxLength: 2
      pattern: ^[A-Z]{2,2}$
    Address:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryCode'
          x-go-type-skip-optional-pointer: true
        city:
          type: string
          maxLength: 64
        postalCode:
          type: string
          maxLength: 16
        streetName:
          type: string
          maxLength: 64
        streetNumber:
          type: string
          maxLength: 16
    PartyType:
      type: string
      enum:
        - INDIVIDUAL
        - COMPANY
    ChargeBearer:
      type: string
      enum:
        - SHARED
        - DEBTOR
        - CREDITOR
    RegulatoryReportingIndicator:
      type: string
      enum:
        - CREDITOR
        - DEBTOR
        - BOTH
    RegulatoryReportingDetails:
      type: object
      properties:
        market:
          $ref: '#/components/schemas/MarketCode'
        indicator:
          $ref: '#/components/schemas/RegulatoryReportingIndicator'
        code:
          type: string
      required:
        - market
        - indicator
        - code
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          readOnly: true
        message:
          type: string
          readOnly: true
        details:
          items:
            $ref: '#/components/schemas/ErrorDetails'
          type: array
          readOnly: true
          x-omitempty: true
    AmountIntegerValueInput:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        value:
          type: integer
          format: int64
      required:
        - currency
        - value
    AmountStringValueInput:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        stringValue:
          type: string
      required:
        - currency
        - stringValue
    CitiWorldlinkInstrumentInput:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InstrumentType'
      required:
        - type
    InstrumentInput:
      type: object
      oneOf:
        - $ref: '#/components/schemas/CitiWorldlinkInstrumentInput'
      discriminator:
        propertyName: type
        mapping:
          CITI_WORLDLINK: '#/components/schemas/CitiWorldlinkInstrumentInput'
    SchemeDetailsInput:
      type: object
      properties:
        instrument:
          $ref: '#/components/schemas/InstrumentInput'
    EventType:
      type: string
      enum:
        - CREATED
        - UPDATED
        - DELETED
    DirectDebitSchemeType:
      type: string
      enum:
        - SDD_CORE
        - SDD_B2B
        - AUTOGIRO
    MandateSnapshot:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          minLength: 32
          maxLength: 64
        creditorReference:
          type: string
        mandateReference:
          type: string
          minLength: 1
          maxLength: 35
        finalCollection:
          type: boolean
          readOnly: true
        signatureDate:
          type: string
          format: date
        version:
          type: integer
          minimum: 1
          readOnly: true
      required:
        - id
        - creditorReference
        - mandateReference
        - finalCollection
        - version
  responses:
    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NoContent:
      description: No content.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
x-tagGroups:
  - name: Payments
    tags:
      - Credit Transfers
      - Direct Debits
      - External Accounts
      - Counterparties
      - Mandates
      - Events (webhooks)
      - Approval Chains
      - Payment Conditions
      - Payment Templates
